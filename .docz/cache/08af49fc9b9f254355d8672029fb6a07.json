{"remainingRequest":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/source-map-loader/index.js!/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/src/BoolCSSTransition.jsx","dependencies":[{"path":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/src/BoolCSSTransition.jsx","mtime":1570123585000},{"path":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/pedrober/Desktop/cs50-final-project/react-animated-navigation/src/BoolCSSTransition.jsx"],"names":["PropTypes","React","Transition","addClass","addOneClass","removeClass","removeOneClass","node","classes","split","forEach","c","BoolCSSTransition","appear","enter","exit","appearing","removeClasses","props","onEnter","type","onEntering","onEntered","onExit","onExiting","onExited","classNames","isStringClassNames","prefix","baseClassName","activeClassName","doneClassName","phase","className","getClassNames","scrollTop","appliedClasses","base","active","done","_","css","other","Component","defaultProps","propTypes","func","bool"],"mappings":"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","sourcesContent":["/**\n\n  Copy of the Original CSSTransition\n\n  https://github.com/reactjs/react-transition-group/blob/master/src/CSSTransition.js\n\n  The difference is it accepts 'css' bool prop\n  true: return CSSTransition\n  false: return Transition\n\n  Why?\n\n  In order to allow smooth back and forth between 'string' and 'object/function'\n  types for 'animation' prop of Link component, we need a single Transition\n  component to handle both cases. If we use something like:\n\n  string ? CSSTransition : Transition\n\n  Would not work because CSSTransition is child of Transition, inserting\n  one more node and breaking the Link animation cycle when changing from\n  string to object/function or vice versa.\n\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Transition } from 'react-transition-group'\n\nimport {\n  addClass as addOneClass,\n  removeClass as removeOneClass\n} from './utils';\n\nconst addClass = (node, classes) => node && classes && classes.split(' ').forEach(c => addOneClass(node, c));\nconst removeClass = (node, classes) => node && classes && classes.split(' ').forEach(c => removeOneClass(node, c));\n\n\nclass BoolCSSTransition extends React.Component {\n\n  appliedClasses = {\n    appear: {},\n    enter: {},\n    exit: {},\n  }\n\n  onEnter = (node, appearing) => {\n    this.removeClasses(node, 'exit');\n    this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n    if (this.props.onEnter) {\n      this.props.onEnter(node, appearing)\n    }\n  }\n\n  onEntering = (node, appearing) => {\n    const type = appearing ? 'appear' : 'enter';\n    this.addClass(node, type, 'active')\n\n    if (this.props.onEntering) {\n      this.props.onEntering(node, appearing)\n    }\n  }\n\n  onEntered = (node, appearing) => {\n    const type = appearing ? 'appear' : 'enter'\n    this.removeClasses(node, type);\n    this.addClass(node, type, 'done');\n\n    if (this.props.onEntered) {\n      this.props.onEntered(node, appearing)\n    }\n  }\n\n  onExit = (node) => {\n    this.removeClasses(node, 'appear');\n    this.removeClasses(node, 'enter');\n    this.addClass(node, 'exit', 'base')\n\n    if (this.props.onExit) {\n      this.props.onExit(node)\n    }\n  }\n\n  onExiting = (node) => {\n    this.addClass(node, 'exit', 'active')\n\n    if (this.props.onExiting) {\n      this.props.onExiting(node)\n    }\n  }\n\n  onExited = (node) => {\n    this.removeClasses(node, 'exit');\n    this.addClass(node, 'exit', 'done');\n\n    if (this.props.onExited) {\n      this.props.onExited(node)\n    }\n  }\n\n  getClassNames = (type) => {\n    const { classNames } = this.props;\n    const isStringClassNames = typeof classNames === 'string';\n    const prefix = isStringClassNames && classNames\n      ? `${classNames}-`\n      : '';\n\n    let baseClassName = isStringClassNames\n      ? `${prefix}${type}`\n      : classNames[type]\n\n    let activeClassName = isStringClassNames\n      ? `${baseClassName}-active`\n      : classNames[`${type}Active`];\n\n    let doneClassName = isStringClassNames\n      ? `${baseClassName}-done`\n      : classNames[`${type}Done`];\n\n    return {\n      baseClassName,\n      activeClassName,\n      doneClassName\n    };\n  }\n\n  addClass(node, type, phase) {\n    let className = this.getClassNames(type)[`${phase}ClassName`];\n\n    if (type === 'appear' && phase === 'done') {\n      className += ` ${this.getClassNames('enter').doneClassName}`;\n    }\n\n    if (phase === 'active') {\n      node && node.scrollTop;\n    }\n\n    this.appliedClasses[type][phase] = className\n    addClass(node, className)\n  }\n\n  removeClasses(node, type) {\n    const {\n      base: baseClassName,\n      active: activeClassName,\n      done: doneClassName\n    } = this.appliedClasses[type]\n\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  }\n\n  render() {\n    const { classNames: _, css, ...other } = this.props;\n\n    return (\n      <Transition\n        {...other}\n        onEnter={css ? this.onEnter : other.onEnter }\n        onEntered={css ? this.onEntered : other.onEntered }\n        onEntering={css ? this.onEntering : other.onEntering }\n        onExit={css ? this.onExit : other.onExit }\n        onExiting={css ? this.onExiting : other.onExiting }\n        onExited={css ? this.onExited : other.onExited }\n      />\n    );\n  }\n}\n\nBoolCSSTransition.defaultProps = {\n  css: false,\n}\n\nBoolCSSTransition.propTypes = {\n  ...Transition.propTypes,\n  onEnter: PropTypes.func,\n  onEntering: PropTypes.func,\n  onEntered: PropTypes.func,\n  onExit: PropTypes.func,\n  onExiting: PropTypes.func,\n  onExited: PropTypes.func,\n  css: PropTypes.bool,\n};\n\nexport default BoolCSSTransition\n"]}]}